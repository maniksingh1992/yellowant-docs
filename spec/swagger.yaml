################################################################################
swagger: '2.0'
info:
  description: |
    This is a documentation for YellowAnt developers to consume the API and endpoints of YellowAnt Main.
  version: '1.0.0'
  title: YellowAnt Developer Docs
  termsOfService: 'https://yellowant.com/common/terms/'
  contact:
    email: vishwa@yellowant.com
    url: 'https://yellowant.com/#section-self-hosted'
  x-logo:
    url: 'logo.png'
################################################################################
schemes:
  - https
host: yellowant.com
basePath: /api
produces:
  - application/json
consumes:
  - application/json
################################################################################
tags:
  - name: Client Manager Admin
    description: "Get client manager admin details"
  - name: Client Manager Tag
    description: "Manage tags in the client manager"
  - name: Client Manager Client
    description: "Manage clients in the client manager"
  - name: Echo
    description: Example echo operations
  - name: User
    description: Operations about user
################################################################################
x-tagGroups:
  - name: Client Manager
    tags:
      - Client Manager Admin
      - Client Manager Tag
      - Client Manager Client
################################################################################
# securityDefinitions:
#   main_auth: # security definition name (you can name it as you want)
#     type: oauth2 # authorization type, one of: oauth2, basic, apiKey
#     # the following options are specific to oauth2 type
#     authorizationUrl: 'http://example.com/api/oauth/dialog'
#     flow: implicit
#     scopes:
#       'read:users': read users info
#       'write:users': modify or remove users
#   api_key: # security definition name (you can name it as you want)
#     type: apiKey
#     # The following options are specific to apiKey type
#     in: header # Where API key will be passed: header or query
#     name: api_key # API key paramteer name
#   basic_auth: # security definition name (you can name it as you want)
#     type: basic
################################################################################
parameters:
  resourceId:
    name: id
    in: path
    description: The resource identifier integer id
    type: integer
    required: true